--- src/decompiled\Terraria.Utilities\PlatformUtilities.cs
+++ src/merged\Terraria.Utilities\PlatformUtilities.cs
@@ -1,17 +_,83 @@
+using SDL2;
 using System;
+using System.IO;
+using System.Runtime.InteropServices;
 
 namespace Terraria.Utilities
 {
 	public static class PlatformUtilities
 	{
-		public const bool IsXNA = true;
+		private struct SDL_Surface
+		{
+			private uint flags;
 
-		public const bool IsFNA = false;
+			public IntPtr format;
 
-		public const bool IsWindows = true;
+			public int w;
 
-		public const bool IsOSX = false;
+			public int h;
 
-		public const bool IsLinux = false;
+			private int pitch;
+
+			public IntPtr pixels;
+
+			private IntPtr userdata;
+
+			private int locked;
+
+			private IntPtr lock_data;
+
+			private SDL.SDL_Rect clip_rect;
+
+			private IntPtr map;
+
+			private int refcount;
+		}
+
+		static PlatformUtilities()
+		{
+			switch(Environment.OSVersion.Platform)
+			{
+				case PlatformID.Win32S:
+				case PlatformID.Win32Windows:
+				case PlatformID.Win32NT:
+				case PlatformID.WinCE:
+				case PlatformID.Xbox:	IsWindows=true;	break;
+				case PlatformID.MacOSX:	IsOSX=true;		break;
+				case PlatformID.Unix:	IsLinux=true;	break;
+			}
+		}
+
+		public static readonly bool IsMono=Type.GetType("Mono.Runtime")!=null;
+
+		public const bool IsFNA = true;
+		public const bool IsXNA = !IsFNA;
+
+		public static readonly bool IsWindows = false;
+		public static readonly bool IsOSX = false;
+		public static readonly bool IsLinux = false;
+
+		public unsafe static void SavePng(Stream stream, int width, int height, int imgWidth, int imgHeight, byte[] data)
+		{
+			IntPtr intPtr = SDL.SDL_CreateRGBSurface(0u, imgWidth, imgHeight, 32, 255u, 65280u, 16711680u, 4278190080u);
+			SDL.SDL_LockSurface(intPtr);
+			PlatformUtilities.SDL_Surface* ptr = (PlatformUtilities.SDL_Surface*)((void*)intPtr);
+			Marshal.Copy(data, 0, ptr->pixels, width * height * 4);
+			SDL.SDL_UnlockSurface(intPtr);
+			data = null;
+			if (width != imgWidth || height != imgHeight)
+			{
+				IntPtr intPtr2 = SDL.SDL_CreateRGBSurface(0u, width, height, 32, 255u, 65280u, 16711680u, 4278190080u);
+				SDL.SDL_BlitScaled(intPtr, IntPtr.Zero, intPtr2, IntPtr.Zero);
+				SDL.SDL_FreeSurface(intPtr);
+				intPtr = intPtr2;
+			}
+			byte[] array = new byte[width * height * 4 + 41 + 57 + 256];
+			IntPtr intPtr3 = SDL.SDL_RWFromMem(array, array.Length);
+			SDL_image.IMG_SavePNG_RW(intPtr, intPtr3, 1);
+			SDL.SDL_FreeSurface(intPtr);
+			int count = ((int)array[33] << 24 | (int)array[34] << 16 | (int)array[35] << 8 | (int)array[36]) + 41 + 57;
+			stream.Write(array, 0, count);
+		}
 	}
 }

