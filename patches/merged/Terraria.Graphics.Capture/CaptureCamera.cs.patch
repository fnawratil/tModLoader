--- src/decompiled\Terraria.Graphics.Capture\CaptureCamera.cs
+++ src/merged\Terraria.Graphics.Capture\CaptureCamera.cs
@@ -8,6 +_,7 @@
 using System.Runtime.InteropServices;
 using System.Threading;
 using Terraria.Localization;
+using Terraria.Utilities;
 
 namespace Terraria.Graphics.Capture
 {
@@ -206,10 +_,18 @@
 					{
 						for (int j = 0; j < area.Width; j++)
 						{
-							ptr2[2] = *ptr4;
+							if(PlatformUtilities.IsWindows)
+							{
+							ptr2[2] = ptr4[0];
 							ptr2[1] = ptr4[1];
-							*ptr2 = ptr4[2];
+							ptr2[0] = ptr4[2];
 							ptr2[3] = ptr4[3];
+							}else{
+							ptr2[0] = ptr4[0];
+							ptr2[1] = ptr4[1];
+							ptr2[2] = ptr4[2];
+							ptr2[3] = ptr4[3];
+							}
 							ptr4 += 4;
 							ptr2 += 4;
 						}
@@ -237,6 +_,7 @@
 					"Captures",
 					Path.DirectorySeparatorChar
 				}));
+				if(PlatformUtilities.IsWindows)
 				using (Bitmap bitmap = new Bitmap(width, height))
 				{
 					System.Drawing.Rectangle rect = new System.Drawing.Rectangle(0, 0, width, height);
@@ -247,6 +_,11 @@
 					bitmap.Save(filename, imageFormat);
 					bitmap.Dispose();
 				}
+				else
+				using (FileStream fileStream = File.Create(filename))
+				{
+					PlatformUtilities.SavePng(fileStream, width, height, width, height, this._outputData);
+ 				}
 				result = true;
 			}
 			catch (Exception value)
@@ -269,9 +_,6 @@
 			});
 			string filename2 = Path.Combine(text, filename);
 			Directory.CreateDirectory(text);
-			using (Bitmap bitmap = new Bitmap(width, height))
-			{
-				System.Drawing.Rectangle rect = new System.Drawing.Rectangle(0, 0, width, height);
 				int elementCount = texture.Width * texture.Height * 4;
 				texture.GetData<byte>(this._outputData, 0, elementCount);
 				int num = 0;
@@ -280,22 +_,39 @@
 				{
 					for (int j = 0; j < width; j++)
 					{
+						if(PlatformUtilities.IsWindows)
+						{
 						byte b = this._outputData[num + 2];
 						this._outputData[num2 + 2] = this._outputData[num];
 						this._outputData[num2] = b;
 						this._outputData[num2 + 1] = this._outputData[num + 1];
 						this._outputData[num2 + 3] = this._outputData[num + 3];
+						}else{
+						this._outputData[num2] = this._outputData[num];
+						this._outputData[num2 + 1] = this._outputData[num + 1];
+						this._outputData[num2 + 2] = this._outputData[num + 2];
+						this._outputData[num2 + 3] = this._outputData[num + 3];
+						}
 						num += 4;
 						num2 += 4;
 					}
 					num += texture.Width - width << 2;
 				}
+			if(PlatformUtilities.IsWindows)
+			using (Bitmap bitmap = new Bitmap(width, height))
+			{
+				System.Drawing.Rectangle rect = new System.Drawing.Rectangle(0, 0, width, height);
 				BitmapData bitmapData = bitmap.LockBits(rect, ImageLockMode.WriteOnly, PixelFormat.Format32bppPArgb);
 				IntPtr scan = bitmapData.Scan0;
 				Marshal.Copy(this._outputData, 0, scan, width * height * 4);
 				bitmap.UnlockBits(bitmapData);
 				bitmap.Save(filename2, imageFormat);
 			}
+			else
+			using (FileStream fileStream = File.Create(filename2))
+			{
+				PlatformUtilities.SavePng(fileStream, width, height, width, height, this._outputData);
+ 			}
 		}
 
 		private void FinishCapture()
@@ -338,6 +_,7 @@
 
 		public void Dispose()
 		{
+#if CLIENT
 			Monitor.Enter(this._captureLock);
 			if (this._isDisposed)
 			{
@@ -352,6 +_,7 @@
 			CaptureCamera.CameraExists = false;
 			this._isDisposed = true;
 			Monitor.Exit(this._captureLock);
+#endif
 		}
 	}
 }

