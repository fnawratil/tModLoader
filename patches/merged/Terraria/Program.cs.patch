--- src/decompiled\Terraria\Program.cs
+++ src/merged\Terraria\Program.cs
@@ -2,14 +_,18 @@
 using ReLogic.OS;
 using System;
 using System.Collections.Generic;
+#if CLIENT
 using System.Diagnostics;
+#endif
 using System.IO;
 using System.Reflection;
 using System.Runtime.CompilerServices;
 using System.Runtime.ExceptionServices;
 using System.Text;
 using System.Threading;
+#if CLIENT
 using System.Windows.Forms;
+#endif
 using Terraria.Initializers;
 using Terraria.Localization;
 using Terraria.Social;
@@ -19,7 +_,11 @@
 {
 	public static class Program
 	{
+#if CLIENT
 		public const bool IsServer = false;
+#else
+		public const bool IsServer = true;
+#endif
 
 		public static Dictionary<string, string> LaunchParameters = new Dictionary<string, string>();
 
@@ -66,14 +_,17 @@
 			for (int i = 0; i < array.Length; i++)
 			{
 				Type type = array[i];
-				MethodInfo[] methods = type.GetMethods(BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic);
+				MethodInfo[] methods = !PlatformUtilities.IsMono?type.GetMethods(BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic):type.GetMethods();
 				MethodInfo[] array2 = methods;
 				for (int j = 0; j < array2.Length; j++)
 				{
 					MethodInfo methodInfo = array2[j];
 					if (!methodInfo.IsAbstract && !methodInfo.ContainsGenericParameters && methodInfo.GetMethodBody() != null)
 					{
+						if(!PlatformUtilities.IsMono)
 						RuntimeHelpers.PrepareMethod(methodInfo.MethodHandle);
+						else
+						Program.JitForcedMethodCache = methodInfo.MethodHandle.GetFunctionPointer();
 					}
 				}
 				Program.ThingsLoaded++;
@@ -183,10 +_,12 @@
 
 		private static void InitializeConsoleOutput()
 		{
+#if CLIENT
 			if (Debugger.IsAttached)
 			{
 				return;
 			}
+#endif
 			try
 			{
 				Console.OutputEncoding = Encoding.Unicode;
@@ -223,7 +_,11 @@
 					SocialAPI.Initialize(null);
 					LaunchInitializer.LoadParameters(main);
 					Main.OnEnginePreload += new Action(Program.StartForceLoad);
+#if CLIENT
 					main.Run();
+#else
+					main.DedServ();
+#endif
 				}
 				catch (Exception e)
 				{
@@ -242,7 +_,11 @@
 					streamWriter.WriteLine(e);
 					streamWriter.WriteLine("");
 				}
+#if CLIENT
 				MessageBox.Show(e.ToString(), "Terraria: Error");
+#else
+				Console.WriteLine(Language.GetTextValue("Error.ServerCrash"), DateTime.Now, e);
+#endif
 			}
 			catch
 			{

